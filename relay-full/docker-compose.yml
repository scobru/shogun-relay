version: "3.8"

services:
  shogun-relay:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: shogun-relay-server
    restart: unless-stopped
    ports:
      - "8765:8765"
      - "8443:8443"
    volumes:
      # Mount persistent data directories
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./radata:/app/radata
      # Mount configuration (optional override)
      - ./config.json:/app/config.json:ro
      # Mount SSL certificates if available
      - ./keys:/app/keys:ro
    environment:
      # Server Configuration
      - NODE_ENV=production
      - PORT=8765
      - HTTPS_PORT=8443
      - HOST=0.0.0.0
      
      # Authentication & Security
      - SECRET_TOKEN=${SECRET_TOKEN:-changeme-in-production}
      - BASIC_AUTH_USER=${BASIC_AUTH_USER:-admin}
      - BASIC_AUTH_PASSWORD=${BASIC_AUTH_PASSWORD:-admin}
      
      # CORS Configuration
      - DISABLE_CORS=${DISABLE_CORS:-false}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:8080,http://localhost:8765}
      
      # IPFS Configuration
      - IPFS_ENABLED=${IPFS_ENABLED:-false}
      - IPFS_SERVICE=${IPFS_SERVICE:-IPFS-CLIENT}
      - IPFS_NODE_URL=${IPFS_NODE_URL:-http://127.0.0.1:5001}
      - IPFS_GATEWAY=${IPFS_GATEWAY:-http://127.0.0.1:8080/ipfs}
      - PINATA_GATEWAY=${PINATA_GATEWAY:-https://gateway.pinata.cloud}
      - PINATA_JWT=${PINATA_JWT:-}
      
      # Blockchain/Relay Configuration
      - ETHEREUM_PROVIDER_URL=${ETHEREUM_PROVIDER_URL:-https://opt-sepolia.g.alchemy.com/v2/demo}
      - ETHEREUM_PRIVATE_KEY=${ETHEREUM_PRIVATE_KEY:-}
      - ONCHAIN_MEMBERSHIP_ENABLED=${ONCHAIN_MEMBERSHIP_ENABLED:-false}
      - RELAY_REGISTRY_CONTRACT=${RELAY_REGISTRY_CONTRACT:-}
      - INDIVIDUAL_RELAY=${INDIVIDUAL_RELAY:-}
      - RELAY_ENTRY_POINT_CONTRACT=${RELAY_ENTRY_POINT_CONTRACT:-}
      
      # File & Storage Configuration
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-100mb}
      - ENCRYPTION_ENABLED=${ENCRYPTION_ENABLED:-false}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-}
      
      # SSL Configuration
      - PRIVKEY_PATH=${PRIVKEY_PATH:-keys/private.key}
      - CERT_PATH=${CERT_PATH:-keys/cert.pem}
      
      # Validation & Debug
      - TYPE_VALIDATION_ENABLED=${TYPE_VALIDATION_ENABLED:-true}
      - TYPE_VALIDATION_STRICT=${TYPE_VALIDATION_STRICT:-false}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - STORAGE_LOG_ENABLED=${STORAGE_LOG_ENABLED:-true}
      
      # Gun Configuration
      - DISABLE_GUN_AUTH=${DISABLE_GUN_AUTH:-false}
      
      # S3 Configuration (optional)
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID:-}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY:-}
      - S3_BUCKET=${S3_BUCKET:-}
      - S3_REGION=${S3_REGION:-us-east-1}
      - S3_ENDPOINT=${S3_ENDPOINT:-}
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8765/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Optional: Add networks for multi-container setups
    networks:
      - shogun-network

networks:
  shogun-network:
    driver: bridge

# Optional: Add volumes for persistence
volumes:
  shogun-uploads:
  shogun-logs:
  shogun-radata:
