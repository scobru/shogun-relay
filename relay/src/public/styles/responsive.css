/* 
 * Shogun Relay - Shared Responsive Styles
 * This file provides standardized responsive design elements
 * that can be included in all applications.
 */

/* Standard responsive breakpoints */
:root {
  --breakpoint-xs: 480px;
  --breakpoint-sm: 640px;
  --breakpoint-md: 768px;
  --breakpoint-lg: 1024px;
  --breakpoint-xl: 1280px;
  --breakpoint-2xl: 1536px;
  
  /* Mobile viewport height fix */
  --vh: 1vh;
}

/* Mobile viewport height fix */
.vh-fix {
  height: calc(var(--vh, 1vh) * 100);
}

/* Responsive container padding */
.container-responsive {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding: 0.5rem;
}

@media (min-width: 640px) {
  .container-responsive {
    padding: 1rem;
  }
}

@media (min-width: 768px) {
  .container-responsive {
    padding: 1.5rem;
  }
}

/* Responsive text sizes */
.text-responsive-title {
  font-size: 1.25rem; /* 20px */
  line-height: 1.75rem;
}

@media (min-width: 640px) {
  .text-responsive-title {
    font-size: 1.5rem; /* 24px */
    line-height: 2rem;
  }
}

@media (min-width: 768px) {
  .text-responsive-title {
    font-size: 1.875rem; /* 30px */
    line-height: 2.25rem;
  }
}

.text-responsive-subtitle {
  font-size: 1.125rem; /* 18px */
  line-height: 1.5rem;
}

@media (min-width: 640px) {
  .text-responsive-subtitle {
    font-size: 1.25rem; /* 20px */
    line-height: 1.75rem;
  }
}

/* Responsive spacing */
.spacing-responsive {
  margin-bottom: 1rem;
}

@media (min-width: 640px) {
  .spacing-responsive {
    margin-bottom: 1.5rem;
  }
}

@media (min-width: 768px) {
  .spacing-responsive {
    margin-bottom: 2rem;
  }
}

/* Responsive form elements */
.input-responsive {
  width: 100%;
  padding: 0.5rem 0.75rem;
  border-radius: 0.375rem;
  background-color: var(--input-bg, #2a2a2a);
  color: var(--input-text, #eee);
  border: 1px solid var(--input-border, #555);
}

.textarea-responsive {
  width: 100%;
  padding: 0.5rem 0.75rem;
  border-radius: 0.375rem;
  background-color: var(--input-bg, #2a2a2a);
  color: var(--input-text, #eee);
  border: 1px solid var(--input-border, #555);
  min-height: 150px;
}

@media (min-width: 640px) {
  .textarea-responsive {
    min-height: 200px;
  }
}

/* Responsive buttons */
.btn-responsive {
  width: 100%;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem 1rem;
  border-radius: 0.375rem;
  font-weight: 500;
  transition: all 0.2s ease;
}

@media (min-width: 640px) {
  .btn-responsive {
    width: auto;
  }
}

/* Responsive tables */
.table-responsive-container {
  width: 100%;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

/* Responsive grid layouts */
.grid-responsive {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
}

@media (min-width: 640px) {
  .grid-responsive {
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
  }
}

@media (min-width: 1024px) {
  .grid-responsive {
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
  }
}

@media (min-width: 1280px) {
  .grid-responsive {
    grid-template-columns: repeat(4, 1fr);
  }
}

/* Responsive card layouts */
.card-responsive {
  display: flex;
  flex-direction: column;
  background-color: var(--card-bg, #2a2a2a);
  border-radius: 0.5rem;
  overflow: hidden;
  border: 1px solid var(--card-border, #444);
  padding: 1rem;
}

@media (min-width: 640px) {
  .card-responsive {
    padding: 1.5rem;
  }
}

/* Responsive message containers */
.message-responsive {
  width: 100%;
  padding: 0.75rem 1rem;
  border-radius: 0.375rem;
  margin-top: 1rem;
  font-size: 0.875rem;
}

/* Responsive icons */
.icon-responsive {
  width: 1.5rem;
  height: 1.5rem;
}

@media (min-width: 640px) {
  .icon-responsive {
    width: 2rem;
    height: 2rem;
  }
}

/* Mobile-first flexbox utilities */
.flex-col-to-row {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

@media (min-width: 640px) {
  .flex-col-to-row {
    flex-direction: row;
    align-items: center;
  }
}

/* Initialize the viewport height variable */
document.addEventListener('DOMContentLoaded', function() {
  function setVhVariable() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
  }
  
  window.addEventListener('resize', setVhVariable);
  window.addEventListener('orientationchange', setVhVariable);
  setVhVariable();
}); 